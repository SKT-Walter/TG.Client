<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:TG.Client.Resources">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/TG.Client;component/Resources/CommonStyle.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <Style x:Key="ColumnHeaderGripperStyle" TargetType="Thumb">
        <Setter Property="Width" Value="2"/>
        <Setter Property="Background" Value="Transparent"/>
        <!--<Setter Property="Background">
            <Setter.Value>
                <RadialGradientBrush>
                    <GradientStop Color="Black" Offset="1"/>
                    <GradientStop Color="White" Offset="0.5"/>
                </RadialGradientBrush>
            </Setter.Value>
        </Setter>-->
        <Setter Property="Cursor" Value="SizeWE"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DataGridColumnHeaderStyle" TargetType="DataGridColumnHeader">
        <Setter Property="Foreground" Value="{StaticResource Black-1}"/>
        <!--<Setter Property="Background" Value="{StaticResource DataGridColumnHeaderBackground}"/>-->
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment"  Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridColumnHeader">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment ="{TemplateBinding VerticalContentAlignment}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Grid.Column="0" Margin="5,0,0,0"
                                                HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Path x:Name="SortArrow"
                                                Grid.Column="1"
                                                VerticalAlignment="Center"                                           
                                                Width="8" Height="6" Margin="2,0,0,0"
                                                Stretch="Fill" Opacity="0.5" Fill="{TemplateBinding Foreground}"
                                                RenderTransformOrigin="0.5,0.4"
                                                Visibility="Collapsed"
                                                Data="M0,0 L1,0 0.5,1 z"/>
                        </Grid>
                        <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                        <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_LeftHeaderGripper" Property="Background">
                                <Setter.Value>
                                    <RadialGradientBrush>
                                        <GradientStop Color="Black" Offset="1"/>
                                        <GradientStop Color="White" Offset="0.5"/>
                                    </RadialGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        -->
                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                            <Setter TargetName="SortArrow" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- ******************************************************** DataGridText DataGridColumnHeader Style -->
    <!-- 居中 -->
    <Style x:Key="DataGridColumnHeaderCenterStyle" TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource DataGridColumnHeaderStyle}">
        <Setter Property="HorizontalContentAlignment"  Value="Center"/>
    </Style>
    <!-- 居右 -->
    <Style x:Key="DataGridColumnHeaderRightStyle" TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource DataGridColumnHeaderStyle}">
        <Setter Property="HorizontalContentAlignment"  Value="Right"/>
    </Style>
    <!-- 居左 -->
    <Style x:Key="DataGridColumnHeaderLeftStyle" TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource DataGridColumnHeaderStyle}">
        <Setter Property="HorizontalContentAlignment"  Value="Left"/>
    </Style>
    <!-- ******************************************************** DataGridText DataGridColumnHeader Style -->

    <Style x:Key="DataGridRowStyle" TargetType="DataGridRow">
        <Setter Property="Foreground" Value="{StaticResource Black-1}"></Setter>
        <!--<Setter Property="Background" Value="{StaticResource DefaultBackgroup.ColorBrush}"/>-->
        <Setter Property="Height" Value="24"/>
        <Style.Triggers>
            <!--<Trigger Property="AlternationIndex" Value="0">
                <Setter Property="Background" Value="{StaticResource DefaultAlternatingRowBackground.Zero.ColorBrush}"/>
            </Trigger>-->
            <Trigger Property="AlternationIndex" Value="1">
                <Setter Property="Background" Value="#FFAABBC9"/>
            </Trigger>
            <!--<MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                    <Condition Property="IsSelected" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="#FF3D99E8"/>
                <Setter Property="BorderBrush" Value="{StaticResource Item.SelectedInactive.Border}"/>
            </MultiTrigger>-->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                    <Condition Property="IsSelected" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="#FF3D99E8"/>
                <Setter Property="BorderBrush" Value="{StaticResource Item.SelectedActive.Border}"/>
            </MultiTrigger>
            <!--鼠标移过-->
            <!--<MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource Item.MouseOver.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource Item.MouseOver.Border}"/>
            </MultiTrigger>-->
        </Style.Triggers>
    </Style>
    <Style x:Key="DataGridCellStyle" TargetType="{x:Type DataGridCell}">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{StaticResource DataGrid.Foreground}"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border x:Name="Bg" Background="Transparent" UseLayoutRounding="True"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0">
                        <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="5,0,0,0"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ******************************************************** DataGridText DataGridCell Style -->
    <!-- 居中 -->
    <Style x:Key="DataGridTextCenterStyle" TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource DataGridCellStyle}">
        <Setter Property="TextBlock.TextAlignment" Value="Center"/>
    </Style>
    <!-- 居右 -->
    <Style x:Key="DataGridTextRightStyle" TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource DataGridCellStyle}">
        <Setter Property="TextBlock.TextAlignment" Value="Right"/>
    </Style>
    <!-- 居左 -->
    <Style x:Key="DataGridTextLeftStyle" TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource DataGridCellStyle}">
        <Setter Property="TextBlock.TextAlignment" Value="Left"/>
    </Style>
    <!-- ******************************************************** DataGridText DataGridCell Style -->


    <Style x:Key="NoFocusDataGridRowStyle" TargetType="DataGridRow">
        <Setter Property="Foreground" Value="{StaticResource DefaultForegroup.ColorBrush}"></Setter>
        <Setter Property="Background" Value="{StaticResource DefaultBackgroup.ColorBrush}"/>
        <Setter Property="Height" Value="24"/>
        <Style.Triggers>
            <Trigger Property="AlternationIndex" Value="0">
                <Setter Property="Background" Value="{StaticResource DefaultAlternatingRowBackground.Zero.ColorBrush}"/>
            </Trigger>
            <Trigger Property="AlternationIndex" Value="1">
                <Setter Property="Background" Value="{StaticResource DefaultAlternatingRowBackground.One.ColorBrush}"/>
            </Trigger>


            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="AlternationIndex" Value="0"/>
                    <Condition Property="IsSelected" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource DefaultAlternatingRowBackground.Zero.ColorBrush}"/>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="AlternationIndex" Value="1"/>
                    <Condition Property="IsSelected" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource DefaultAlternatingRowBackground.One.ColorBrush}"/>
            </MultiTrigger>

            <!--<Trigger Property="IsSelected"
                                         Value="True">
                <Setter Property="Background"
                                            Value="Transparent" />
                <Setter Property="BorderBrush"
                                            Value="Transparent" />
            </Trigger>-->
            <!--<Trigger Property="IsFocused"
                                         Value="True">
                <Setter Property="Background"
                                            Value="Transparent" />
                <Setter Property="BorderBrush"
                                            Value="Transparent" />
            </Trigger>-->
        </Style.Triggers>
    </Style>

    <Style x:Key="NoFocusDataGrid" TargetType="DataGrid">
        <!--<Setter Property="CanUserSortColumns" Value="False"/>-->
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="GridLinesVisibility" Value="None"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="SelectionMode" Value="Extended"/>
        <Setter Property="SelectionUnit" Value="FullRow"/>
        <!-- 不需要虚拟模式 -->
        <!--<Setter Property="EnableRowVirtualization" Value="False"/>-->
        <!-- 不需要边框 -->
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="EnableColumnVirtualization" Value="True"/>
        <Setter Property="EnableRowVirtualization" Value="True"/>
        <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True"/>
        <Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel"/>
        <Setter Property="VirtualizingPanel.IsContainerVirtualizable" Value="True"/>
        <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling"/>
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="True"/>
        <Setter Property="BorderBrush" Value="{StaticResource DataGridColumnHeaderBorderBrush}"/>
        <Setter Property="FontSize" Value="{StaticResource SmallContentFontSize}"/>
        <Setter Property="Background" Value="{StaticResource DefaultBackgroup.ColorBrush}"/>
        <Setter Property="AlternationCount" Value="1"/>
        <Setter Property="AlternatingRowBackground" Value="{StaticResource DefaultAlternatingRowBackground.ColorBrush}"/>
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource DataGridColumnHeaderStyle}"/>
        <Setter Property="RowStyle" Value="{StaticResource NoFocusDataGridRowStyle}"/>
        <Setter Property="CellStyle" Value="{StaticResource DataGridCellStyle}"/>
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
    </Style>

    


    <Style x:Key="DefaultDataGrid" TargetType="DataGrid">
        <!--<Setter Property="CanUserSortColumns" Value="False"/>-->
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="GridLinesVisibility" Value="None"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="SelectionMode" Value="Extended"/>
        <Setter Property="SelectionUnit" Value="FullRow"/>
        <!-- 不需要虚拟模式 -->
        <!--<Setter Property="EnableRowVirtualization" Value="False"/>-->
        <!-- 不需要边框 -->
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="EnableColumnVirtualization" Value="True"/>
        <Setter Property="EnableRowVirtualization" Value="True"/>
        <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True"/>
        <Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel"/>
        <Setter Property="VirtualizingPanel.IsContainerVirtualizable" Value="True"/>
        <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling"/>
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="True"/>
        <Setter Property="BorderBrush" Value="{StaticResource DataGridColumnHeaderBorderBrush}"/>
        <Setter Property="FontSize" Value="{StaticResource SmallContentFontSize}"/>
        <!--<Setter Property="Background" Value="{StaticResource DefaultBackgroup.ColorBrush}"/>-->
        <Setter Property="AlternationCount" Value="1"/>
        <Setter Property="AlternatingRowBackground" Value="{StaticResource DefaultAlternatingRowBackground.ColorBrush}"/>
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource DataGridColumnHeaderStyle}"/>
        <Setter Property="RowStyle" Value="{StaticResource DataGridRowStyle}"/>
        <Setter Property="CellStyle" Value="{StaticResource DataGridCellStyle}"/>
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
    </Style>
    <ControlTemplate x:Key="ToggleButtonTemp" TargetType="{x:Type ToggleButton}">
        <Border x:Name="bd"  
                    BorderThickness="0"  >
            <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                <!--<TextBlock x:Name="p" Text="＞" HorizontalAlignment="Center"  VerticalAlignment="Center" FontSize="12" Foreground="#FFEBC8"></TextBlock>-->
                <Image Margin="2 0 5 0" DockPanel.Dock="Left" x:Name="_img"  Stretch="None" Source="/StcLite.Trade.Plugin;component/Images/double-left copy 2.png" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="_img" Property="Source" Value="/StcLite.Trade.Plugin;component/Images/double-left.png"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="DefaultExpander" TargetType="{x:Type Expander}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition x:Name="gr" Height="0"/>
                        </Grid.RowDefinitions>
                        <BulletDecorator Grid.Row="0" VerticalAlignment="Center" >
                            <BulletDecorator.Bullet>
                                <ToggleButton x:Name="expanderToggle" Margin="1,1,1,1"  Height="18" Width="18" Template="{StaticResource ToggleButtonTemp}"  
                                                  IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"  
                                                  OverridesDefaultStyle="True"/>
                            </BulletDecorator.Bullet>
                            <ContentPresenter HorizontalAlignment="Center" Margin="1,1,1,1" ContentSource="Header"/>
                        </BulletDecorator>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--DefaultDataGrid 样式-->
    <Style x:Key="DefaultDataGridForQuery" TargetType="DataGrid" BasedOn="{StaticResource DefaultDataGrid}">
        <Setter Property="RowStyle" Value="{DynamicResource DataGridRowStyleForQuery}"/>
    </Style>
    <Style x:Key="DataGridRowStyleForQuery" TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource DataGridRowStyle}">
        <Style.Triggers>

            <Trigger Property="AlternationIndex" Value="0">
                <Setter Property="Background" Value="{StaticResource DefaultAlternatingRowBackground.Zero.ColorBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource DefaultBackgroup.ColorBrush}"/>
            </Trigger>
            <Trigger Property="AlternationIndex" Value="1">
                <Setter Property="Background" Value="{StaticResource DefaultAlternatingRowBackground.One.ColorBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource DefaultAlternatingRowBackground.ColorBrush}"/>
            </Trigger>
            <!--鼠标移过-->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource Bid.MouseOver.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource Bid.MouseOver.BorderBrush}"/>

            </MultiTrigger>
            <!-- 不知悬浮颜色 todo  -->
            <!--选中颜色-->
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource Bid.Selected.Backgroud}"/>
                <Setter Property="BorderBrush" Value="{StaticResource Bid.Selected.BorderBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>